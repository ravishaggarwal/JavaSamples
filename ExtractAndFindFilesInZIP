package mytest.myexample;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

public class ExtractAndFindFilesInZIP{

public static void main(String args[])
{
	String zipFilePath = "d:/SampleZipFile.zip";
	String searchFileName = "ReadMe.txt";
     if(zipFilePath == null || zipFilePath.equals("")){
    	 System.out.println("The source zip file is not present in the location");
    	 System.exit(0);
        }
     try{
    	 findFileInZipfile(zipFilePath,searchFileName);
    	 unzip(zipFilePath);
        }catch(Exception e){
        	System.out.println("The exception ocurred during the processing of ZIP file " +e.getMessage());
        	e.printStackTrace();
        }
        System.out.println("Zip file has successfully extracted, please check at location");
}

private static void  findFileInZipfile(String zipFilePath,String searchFileName) throws Exception{
	ZipFile sourceZipFile = null;
	try{
		sourceZipFile = new ZipFile("D:/SampleZipFile.zip");
		Enumeration e = sourceZipFile.entries();
		 
		 boolean fileFound = false;
         while(e.hasMoreElements()){
                 ZipEntry entry = (ZipEntry)e.nextElement();
                 if(entry.getName().indexOf(searchFileName) != -1){
                	fileFound = true;
                	System.out.println("File : " + searchFileName + " found in the zip file " + sourceZipFile.getName());
                   }
           }
        if(fileFound == false)
         {
            System.out.println("File :" + searchFileName + "does not found in the zip file " + sourceZipFile.getName());
         }
	}catch(IOException e){
		throw e;
	}
	finally{
		sourceZipFile.close();
	}
}
private static void unzip(String zipFilePath) throws Exception {
	BufferedInputStream bis = null;   
	BufferedOutputStream bos =null;
	FileOutputStream fos = null;
	ZipFile zipFile = null;
	try{
        //initially create the directory for the input string.
        File SourceZipFolder = new File(zipFilePath);
        // removing the .zip and evluating the final zip path
        String finalzipPath = zipFilePath.substring(0, zipFilePath.length()-4);
        
        File diskFilePath = new File(finalzipPath);
        diskFilePath.mkdir();
        System.out.println("Folder created with name of " +finalzipPath);
        zipFile = new ZipFile(SourceZipFolder);
        Enumeration e = zipFile.entries();
        while(e.hasMoreElements()){
            ZipEntry entry = (ZipEntry)e.nextElement();
            File destinationFilePath = new File(diskFilePath,entry.getName());
            //Here creating the subdirectories that are present in the main directory and subdirectories.
            destinationFilePath.getParentFile().mkdirs();
            if(entry.isDirectory()){
                    continue;
            }else{
                    bis = new BufferedInputStream(zipFile.getInputStream(entry));
                    int b;
                    byte buffer[] = new byte[1024];
                    fos = new FileOutputStream(destinationFilePath);
                    bos = new BufferedOutputStream(fos,1024);
                    while ((b = bis.read(buffer, 0, 1024)) != -1) {
                    	bos.write(buffer, 0, b);
                    }
            }
          }
        }
        catch(IOException ioe)
        {
                throw ioe;
        }
       	finally{
       		if(bos !=null){
       			bos.flush();
       			bos.close();
       		}
       		if(bis !=null){
            bis.close();
       		}
       		if(zipFile !=null){
       			zipFile.close();
       		}
       	}
 	}
}
